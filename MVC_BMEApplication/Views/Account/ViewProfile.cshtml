@model MVC_BMEApplication.Models.User
@{
    ViewBag.Title = "View Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("ViewProfile", "Account", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.User_ID)
    if (ViewBag.UserID!=0)
    {
        @Html.HiddenFor(model => model.Password)
        @Html.HiddenFor(model => model.ConfirmPassword)
    }
    @*@Html.HiddenFor(model => model.Role_ID)*@
    <div class="row">
        <div class="col-md-2 form-group">
            @Html.LabelFor(model => model.FirstName, "Full Name", new { @class = "control-label  col-md-10" })
        </div>
        <div class="col-md-4 form-group">
            @Html.TextBoxFor(model => model.FirstName, new { @class = "col-md-12 form-control", @placeholder = "First Name" })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-2 form-group">
            @Html.TextBoxFor(model => model.MiddleName, new { @class = "col-md-12 form-control", @placeholder = "Middle Name" })
            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4 form-group">
            @Html.TextBoxFor(model => model.LastName, new { @class = "col-md-12 form-control", @placeholder = "Last Name" })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8 input-group date form_date" data-date="" data-date-format="dd/mm/yyyy" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                @Html.TextBoxFor(model => model.DOB, "{0:dd/MM/yyyy}", new { @class = "form-control", @placeholder = "Date of Birth", @style = " background-color:#fff" })
                <span class="input-group-addon hidden-xs"><i class="fa fa-calendar"></i></span>
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>
        

        <div class="col-md-6 form-group ">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
                    {
                    new SelectListItem{Text="Male",Value="Male"},
                    new SelectListItem{Text="Female",Value="Female"}}
                    , "Select", new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.Address, new { @class = "form-control", @placeholder = "Address" })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 form-group ">
            @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control", @placeholder = "Email ID" })
                @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Mobile1, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.Mobile1, new { @class = "form-control", @placeholder = "Primary Mobile" })
                @Html.ValidationMessageFor(model => model.Mobile1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group ">
            @Html.LabelFor(model => model.Mobile2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Mobile2, new { @class = "form-control", @placeholder = "Secondary Mobile" })
                @Html.ValidationMessageFor(model => model.Mobile2, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @placeholder = "User Name" })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group ">
            @Html.LabelFor(model => model.Role_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Role_ID, (SelectList)ViewBag.RoleList, "Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Role_ID, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    if (ViewBag.UserID==0)
    {
    <div class="row">
        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.PasswordFor(model => model.Password, new { @id="txtPassword", @class = "form-control", @placeholder = "Password" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 form-group ">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.ConfirmPassword, new { @id = "txtConfirmPassword", @class = "form-control", @placeholder = "Confirm Password" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    }
    <div class="row">
        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.ActivationStatus, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.ActivationStatus, new List<SelectListItem>
                    {
                    new SelectListItem{Text="Active",Value="Active"},
                    new SelectListItem{Text="Inactive",Value="Inactive"}}
                    , "Select", new { @class = "form-control" })
                @*@Html.TextBoxFor(model => model.ActivationStatus, new { @class = "form-control", @placeholder = "Activation Status" })*@
                @Html.ValidationMessageFor(model => model.ActivationStatus, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
            <a href="@Url.Action("ManageUser", "Account")" class="btn btn-default">Cancel</a>
        </div>
    </div>
    <div class="h5 mb-3 font-weight-normal" id="dvValidationSummary" style="display:none;">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
}

@if (ViewBag.Message != null)
{
    <script>
    window.onload = function () {
        alert('@ViewBag.Message');
            window.location.href = "@Url.Action("ManageUser", "Account")";
    }
        $(document).ready(function () {
            alert("Hi");
            $("#txtConfirmPassword").focusout(function () {
                alert("Hi HI");
                var sPassword = $("#txtPassword").val();
                var sConfirmPassword = $("#txtConfirmPassword").val();
                if (sPassword != sConfirmPassword) {
                    $("#dvValidationSummary").show();
                }
            });
        });
    </script>
}
